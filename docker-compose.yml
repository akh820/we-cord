# docker-compose.yml (수정된 최종 버전)

services:
  # 1. Nginx 리버스 프록시 (새로 추가)
  nginx:
    image: nginx:latest
    container_name: we-cord-nginx-container
    ports:
      - "80:80" # HTTP 포트
      - "443:443" # HTTPS 포트
    volumes:
      # 2단계에서 만든 설정 파일을 컨테이너 내부의 기본 설정 폴더에 연결
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      # Certbot과 SSL 인증서를 공유하기 위한 볼륨
      - certbot_certs:/etc/letsencrypt
      # Certbot 도메인 인증을 위한 볼륨
      - certbot_www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    restart: always

    # 2. Certbot (새로 추가)
  certbot:
    image: certbot/dns-cloudflare # <--- Cloudflare 플러그인 장착 모델로 변경!
    container_name: we-cord-certbot-container
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      # 호스트의 API 토큰 파일을 컨테이너 내부로 연결해주는 부분 추가!
      - /etc/letsencrypt/cloudflare.ini:/etc/letsencrypt/cloudflare.ini:ro

  # 3. 데이터베이스 서비스 (기존과 동일)
  db:
    image: postgres:15
    container_name: we-cord-db-container
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # 4. 백엔드 서비스 (ports 부분 제거)
  backend:
    build:
      context: ./we-cord-be
      dockerfile: Dockerfile
    container_name: we-cord-backend-container
    restart: always
    # ports: 부분을 제거합니다. 외부에서 직접 접근하지 않습니다.
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=jdbc:postgresql://db:5432/${DB_NAME}?sslmode=disable
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db

  # 5. 프론트엔드 서비스 (ports 부분 제거)
  frontend:
    build:
      context: ./we-cord-fe
      dockerfile: Dockerfile
    container_name: we-cord-frontend-container
    restart: always
    # ports: 부분을 제거합니다. 외부에서 직접 접근하지 않습니다.
    depends_on:
      - backend

volumes:
  postgres_data: {}
  # Nginx, Certbot이 공유할 볼륨 정의 (새로 추가)
  certbot_certs:
  certbot_www:
