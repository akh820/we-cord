# Docker Compose 파일 포맷 버전을 정의합니다. 최신 버전을 사용하는 것이 좋습니다.
# version: '3.8'

# 우리가 실행할 서비스(컨테이너)들의 묶음을 정의합니다.
services:
  # 1. 데이터베이스 서비스 (PostgreSQL)
  db:
    image: postgres:15
    container_name: we-cord-db-container
    restart: always
    # .env 파일에 정의한 비밀번호 등을 환경 변수로 주입
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432" # 외부에서 DB에 접속해야 할 경우를 위해 포트 개방
    # Docker Volume을 사용한 데이터 영구 보존 설정
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # 2. 백엔드 서비스
  backend:
    build:
      context: ./we-cord-be
      dockerfile: Dockerfile
    container_name: we-cord-backend-container
    restart: always
    ports:
      - "8080:8080"
    # 백엔드가 DB에 접속할 정보를 환경 변수로 주입
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    # DB 서비스가 먼저 실행된 후에 백엔드가 실행되도록 순서 지정
    depends_on:
      - db

  # 3. 프론트엔드 서비스
  frontend:
    build:
      context: ./we-cord-fe
      dockerfile: Dockerfile
    container_name: we-cord-frontend-container
    restart: always
    ports:
      - "80:80"
    # 백엔드 서비스가 실행된 후에 프론트엔드가 실행되도록 순서 지정
    depends_on:
      - backend

# Docker Volume 정의 (데이터 영구 저장을 위한 공간)
volumes:
  postgres_data: {}
